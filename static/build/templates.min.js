(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['document'] = template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, functionType="function", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  
  return "size12 ";
  }

function program3(depth0,data) {
  
  var buffer = "", stack1, stack2;
  buffer += "<span class=\"tag date\">"
    + escapeExpression(((stack1 = depth0.name),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</span>";
  stack2 = helpers.unless.call(depth0, depth0.$last, {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  return buffer;
  }
function program4(depth0,data) {
  
  
  return ", ";
  }

function program6(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n  <div class=\"abstract\">";
  if (stack1 = helpers['abstract']) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0['abstract']; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</div>\n  ";
  return buffer;
  }

function program8(depth0,data) {
  
  var buffer = "", stack1, stack2, options;
  buffer += "\n    &middot;\n    <span class=\"institutions\">\n      ";
  options = {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};
  stack2 = ((stack1 = helpers.foreach || depth0.foreach),stack1 ? stack1.call(depth0, ((stack1 = depth0.tags),stack1 == null || stack1 === false ? stack1 : stack1.Institution), options) : helperMissing.call(depth0, "foreach", ((stack1 = depth0.tags),stack1 == null || stack1 === false ? stack1 : stack1.Institution), options));
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n    </span>\n    ";
  return buffer;
  }
function program9(depth0,data) {
  
  var buffer = "", stack1, stack2;
  buffer += "<span class=\"tag institution\">"
    + escapeExpression(((stack1 = depth0.name),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</span>";
  stack2 = helpers.unless.call(depth0, depth0.$last, {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  return buffer;
  }

function program11(depth0,data) {
  
  var buffer = "";
  return buffer;
  }

  buffer += "<div class=\"box ";
  stack1 = helpers['if'].call(depth0, depth0['abstract'], {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\" style=\"overflow:hidden\">\n  <div class=\"tags\">\n    <span class=\"date\">\n      ";
  options = {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data};
  stack2 = ((stack1 = helpers.foreach || depth0.foreach),stack1 ? stack1.call(depth0, ((stack1 = depth0.tags),stack1 == null || stack1 === false ? stack1 : stack1.Date), options) : helperMissing.call(depth0, "foreach", ((stack1 = depth0.tags),stack1 == null || stack1 === false ? stack1 : stack1.Date), options));
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n    </span>\n    <span class=\"type\">";
  if (stack2 = helpers.type) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.type; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "</span>\n  </div>\n\n  <h2>";
  if (stack2 = helpers.title) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.title; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "</h2>\n\n  ";
  stack2 = helpers['if'].call(depth0, depth0['abstract'], {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n\n  <div class=\"thumb\" ></div>\n  <!-- \n\n  ";
  stack2 = helpers['if'].call(depth0, ((stack1 = ((stack1 = depth0.tags),stack1 == null || stack1 === false ? stack1 : stack1.Institution)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n\n  -->\n  <div class=\"actions\">\n    <a class=\"\" href=\"#\">cite it</a>\n    <a class=\"\" href=\"/#";
  options = {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data};
  stack2 = ((stack1 = helpers.url || depth0.url),stack1 ? stack1.call(depth0, "d", "slug", depth0.slug, options) : helperMissing.call(depth0, "url", "d", "slug", depth0.slug, options));
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\">view</a>\n    <a class=\"\" href=\"#\">cite it</a>\n  </div>\n</div>";
  return buffer;
  });
templates['document_view'] = template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, functionType="function", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  var buffer = "", stack1, stack2;
  buffer += "<span class=\"tag date\">"
    + escapeExpression(((stack1 = depth0.name),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</span>";
  stack2 = helpers.unless.call(depth0, depth0.$last, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  return buffer;
  }
function program2(depth0,data) {
  
  
  return ", ";
  }

function program4(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n  <div class=\"abstract\">";
  if (stack1 = helpers['abstract']) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0['abstract']; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</div>\n  ";
  return buffer;
  }

function program6(depth0,data) {
  
  var buffer = "", stack1, stack2, options;
  buffer += "\n    &middot;\n    <span class=\"institutions\">\n      ";
  options = {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data};
  stack2 = ((stack1 = helpers.foreach || depth0.foreach),stack1 ? stack1.call(depth0, ((stack1 = depth0.tags),stack1 == null || stack1 === false ? stack1 : stack1.Institution), options) : helperMissing.call(depth0, "foreach", ((stack1 = depth0.tags),stack1 == null || stack1 === false ? stack1 : stack1.Institution), options));
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n    </span>\n    ";
  return buffer;
  }
function program7(depth0,data) {
  
  var buffer = "", stack1, stack2;
  buffer += "<span class=\"tag institution\">"
    + escapeExpression(((stack1 = depth0.name),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</span>";
  stack2 = helpers.unless.call(depth0, depth0.$last, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  return buffer;
  }

function program9(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n  <div class=\"swiper-container\">\n    <div class=\"swiper-wrapper\">\n      \n      \n        \n        ";
  stack1 = helpers.each.call(depth0, depth0.attachments, {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    </div>\n    \n  </div>\n  ";
  return buffer;
  }
function program10(depth0,data) {
  
  var buffer = "", stack1, stack2, options;
  buffer += "\n\n          ";
  options = {hash:{
    'compare': ("image")
  },inverse:self.noop,fn:self.program(11, program11, data),data:data};
  stack2 = ((stack1 = helpers.if_eq || depth0.if_eq),stack1 ? stack1.call(depth0, depth0.type, options) : helperMissing.call(depth0, "if_eq", depth0.type, options));
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n          ";
  options = {hash:{
    'compare': ("video")
  },inverse:self.noop,fn:self.program(13, program13, data),data:data};
  stack2 = ((stack1 = helpers.if_eq || depth0.if_eq),stack1 ? stack1.call(depth0, depth0.type, options) : helperMissing.call(depth0, "if_eq", depth0.type, options));
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n        ";
  return buffer;
  }
function program11(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n            <div class=\"swiper-slide\"><img src=\""
    + escapeExpression(((stack1 = depth0.src),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\"/></div>\n          ";
  return buffer;
  }

function program13(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n            <div class=\"swiper-slide\">\n              <video id=\""
    + escapeExpression(((stack1 = depth0.id),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" class=\"video-js vjs-default-skin\"\n                controls preload=\"auto\" width=\"100%\" height=\"264\"\n                poster=\""
    + escapeExpression(((stack1 = depth0.poster),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">\n               <source src=\""
    + escapeExpression(((stack1 = depth0.src),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" type='video/mp4' />\n              </video>\n              \n            </div>\n          ";
  return buffer;
  }

function program15(depth0,data) {
  
  var buffer = "";
  return buffer;
  }

  buffer += "<div class=\"big-box\">\n  <div class=\"tags\">\n    <span class=\"date\">\n      ";
  options = {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data};
  stack2 = ((stack1 = helpers.foreach || depth0.foreach),stack1 ? stack1.call(depth0, ((stack1 = depth0.tags),stack1 == null || stack1 === false ? stack1 : stack1.Date), options) : helperMissing.call(depth0, "foreach", ((stack1 = depth0.tags),stack1 == null || stack1 === false ? stack1 : stack1.Date), options));
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n    </span>\n    <span class=\"type\">";
  if (stack2 = helpers.type) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.type; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "</span>\n  </div>\n\n  <h2>";
  if (stack2 = helpers.title) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.title; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "</h2>\n\n  ";
  stack2 = helpers['if'].call(depth0, depth0['abstract'], {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n\n  <div class=\"thumb\" ></div>\n  <!-- \n\n  ";
  stack2 = helpers['if'].call(depth0, ((stack1 = ((stack1 = depth0.tags),stack1 == null || stack1 === false ? stack1 : stack1.Institution)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n\n  -->\n  ";
  stack2 = helpers['if'].call(depth0, ((stack1 = depth0.attachments),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n  <div class=\"pagination\"></div>\n\n  <div class=\"actions\">\n    <a class=\"\" href=\"#\">cite it</a>\n    <a class=\"\" href=\"/#";
  options = {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data};
  stack2 = ((stack1 = helpers.url || depth0.url),stack1 ? stack1.call(depth0, "d", "slug", depth0.slug, options) : helperMissing.call(depth0, "url", "d", "slug", depth0.slug, options));
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\">view</a>\n    <a class=\"\" href=\"#\">cite it</a>\n  </div>\n</div>";
  return buffer;
  });
})();